
  <section class="section offer">
     <div class="container">
        {% comment %} <span>MENS-</span> {% endcomment %}
       <div class="product-banner"> 
          <div class="thumbs">
            {% for image in product.images %}
                <img src="{{ image | image_url}}"  alt="{{ image.alt }}" class="{% if forloop.first %}thumb-active{% endif %}">
              {% endfor %}
           {% comment %} <img src="{{ product.featured_image | image_url }}" alt="" class="thumb-active">
           <img src="{{ product.featured_image | image_url }}" alt="">
           <img src="{{ product.featured_image | image_url }}" alt="">
           <img src="{{ product.featured_image | image_url }}" alt=""> {% endcomment %}
          </div> 
          <div class="card-banner img-holder">
             <img src="{{product.featured_image | img_url : 'large'}}" alt="{{product.featured_image.alt | escape }}" class="img-cover"  loading="lazy">
          </div>
       </div>
        <div class="offer-content">
          <h1 class="title">
            <span class="titleText">
                {{ product.title }}
            </span>
            <span class="titleOverlay"></span>
         </h1>
         <div class="pricing">
            <h4 class="price">{{ product.price | money }}</h4>
        </div>
        <p class="description">
          {{ product.description }}
        </p>
        <div class="options">
               <h4>Size</h4>
              <ul class="sizes">
                <li class="size-active">37</li>
                <li>38</li>
                <li>39</li>
                <li>40</li>
                <li>41</li>
              </ul>
              <div class="relative">
                <h4>Reviews</h4>
              </div>
              <div class="card-rating">
                <div class="rating-wrapper" aria-label="5 star rating" style="display:flex; ">
                  <ion-icon name="star" aria-hidden="true"></ion-icon>
                  <ion-icon name="star"  aria-hidden="true"></ion-icon>
                  <ion-icon name="star"  aria-hidden="true"></ion-icon>
                  <ion-icon name="star"  aria-hidden="true"></ion-icon>
                  <ion-icon name="star"  aria-hidden="true"></ion-icon>
                </div>
              </div>
         
              <div class="colors">
                {% comment %} <h4>Colors</h4>
                  <ul>
                    <li class="color color-active"></li>
                    <li class="color"></li>
                  </ul> {% endcomment %}
                  <form action="/cart/add" method="post" style='margin-top:1em;' enctype="multipart/form-data" onsubmit="submitAddToCartForm(this); return false;">
                    <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                    <button type="submit" class="action-btn btn btn-primary" aria-label="add to cart">
                      {% comment %} <ion-icon name="bag-handle-outline" aria-hidden="true"></ion-icon> {% endcomment %}
                      Add to Cart
                    </button>
                  </form>
                  {% comment %} <a href="#" class="btn btn-primary">Add to Cart</a> {% endcomment %}
              </div>
         </div>
       

        </div>
    </div>
</section>


{% comment %} <section class="product-main">
  <div class='product-main-wrapper'>
     <div>
       <img
        width="600"
        height="600"
        loading="lazy"
        src="{{ product.featured_image | image_url }}" 
      />
     </div>
     <div>
      <h2>{{ product.title }}</h2>
      <p>{{ product.price }}</p>
      <p>{{ product.description }}</p>
      <h3>Select Size</h3>
      {% form 'product', product %}
        <select name="id">
          {% for variant in product.variants %}
           <option value="{{ variant.id }}">
            {{ variant.title }}
           </option>
          {% endfor %}
        </select> 
       {% endform %}
       <button type="submit">Add to Card</button>
       <input type="submit" value="Add to cart">    
     </div>  
  </div>
</section> {% endcomment %}

<style>
  /*.product-banner{
    display: grid;
    grid-template-columns: 0.7fr 1fr;
    align-items: center;
    gap: 15px;
    margin-block-end: 5px; 
  }*/

  .product-banner {
    display: flex;
    justify-content: center; /* Center the children horizontally */
    align-items: center; /* Center the children vertically */
    gap: 30px; /* Set the desired gap between the children */
    margin-block-end: 20px; /* Maintain bottom margin */
}



.img-holder{
 {% comment %} width: 100%; {% endcomment %}
 overflow: hidden;
}

.img-holder img{
  transition: transform 0.5s ease, transform-origin 0.5s ease;
}

.img-holder:hover img {
  transform: scale(1.2); /* Zoom the image to 120% */
}


.title{
    position: relative;
}

.title .titleOverlay{
    display: block;
    position:absolute;
    top: 0;
    left: 0;
    background: #111;
    z-index: -1;
    transition: 0.3s ease;
    width: 100%;
    height: 100%;
    transform: scaleX(0);
    transform-origin: top left;
}

.titleText{
    color: #111;
}

.thumbs{
  display:'flex';

}

.thumbs img{
    width: 3em;
    height: 3em;
    border-radius: 4px;
    cursor: pointer;
}

.thumbs .thumb-active{
    border: 3px #ccc solid;
}

.showcase img{
    width: 100%;
    transform-origin: bottom;
}

.showcase > div {
    position: relative;
    height: 100%;
}

{% comment %} .shadow{
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    height: 1em;
    width: 100%;
    background:rgba(0,0,0,0.5);
    border-radius: 50%;
    filter: blur(3px);
    z-index: 0;
} {% endcomment %}


{% comment %} .options > div, 
.options > ul {
    padding: 0.6em 0;
} {% endcomment %}

.sizes li{
 width: 3.2em;
 height: 3.2em;
 border: 1px #111 solid;
 border-radius: 50%;
 text-align: center;
 line-height: 3.2em;
 font-size: 0.8em;
 transition: 0.3s;
}
.size-active{
    background: #111;
    color:#fff
}

.reviews .pricing{
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.pricing .price{
    color: #111;
}

.reviews h4, .pricing h4{
    color: #ccc;
}

.reviews .stars li{
    margin: 0;
    cursor:default;
}

.options{
    justify-self: start;
    gap:2em;
}

.options ul li{
   display: inline-block;
   margin: 0 0.2em;
   cursor: pointer; 
}

.options ul li:nth-child(1){
    margin-left: 0;
}
.colors{
 margin-top:1rem;
}

.colors li{
    width: 2em;
    height: 2em;
    background: red;
    border-radius: 50%;
    border: 3px #f6f6f6 solid;
}

.colors .color-active{
    border-color: #111;
}

.bar-bottom{
    background: #fff;
    padding: 1.5em;
}

.bar-bottom div, .bar-bottom a{
    display: flex;
    align-items: center;
}

.bar-bottom span{
    cursor: pointer;
}

.controls{
    justify-content: space-evenly;
}

.arrows span{
    font-size: 2.5em;
}
.pagination{
    display: flex;
    margin: 0 0.5em;
}
.pag{
    background: #ccc;
    width: 3em;
    height: 0.2em;
    margin: 0 7px;
    transition: 0.3s;
}

.pag-active{
    background: #111;
}

.arr-left {
    transform: rotate(180deg);
}

.cart{
    justify-self: center;
}

.cart button{
    background: #111;
    color: #fff;
    border: none;
    padding: 1.3em 2em;
    font-size: 0.8em;
    text-transform: uppercase;
    margin-right: 1.5em;
    transition: 0.3s;
}

.cart button:hover{
    background: #000;
}

/*Increase title size on larger screens*/

@media screen and(min-width:1250px){
    .title{
        font-size: 2.5em;
    }
}

/*Shoe Jump Animation*/
@keyframes jump{
    40%{
        transform: translateY(-8em) rotate(10deg);
    }
    70%{
       transform: translateY(-8em) rotate(0)
    }
    85%{
        transform: translateY(0) rotate(0deg)
    }
    87%{
        transform: scaleY(0.8);
    }
    100% {
        transform: scaleY(1);
    }

}


/*Shadow Animation*/
@keyframes shadow{
    50%{
        transform:translateX(-50%) scaleX(0.8)
    }
    100% {
        transform: translateX(-50%) scaleX(1)
    }
}

@keyframes shadow2 {
    50%{
        width: 0;
        transform: translateX(-50%);
    }
    100%{
        width: 100%;
        transform: translateX(-50%);
    }
}

/*Shoe fade animation*/
@keyframes fade {
    0%{
        opacity: 0;
    }
    100%{
        opacity: 1;
    }
}

/*Title Animation*/
@keyframes title{
    0%{
        transform: scaleX(0);
        transform-origin: top left;
    }
    30%{
        transform: scaleX(1);
        transform-origin: top right;
    }
    60%{
        transform: scaleX(1);
        transform-origin:top right;
    }
    100%{
        transform: scaleX(0);
        transform-origin:top right;
    }
}

/*Shoe Replace Animation*/
@keyframes replace{
    5%{
        transform: scaleY(0.8);
    }
    10%{
        transform: scaleY(1);
    }
    40%{
        transform: translateY(-100vh);
    }
    60%{
        transform: translateY(-100vh);
    }
    85%{
        transform: translateY(0);
    }
    90%{
        transform: scaleY(0.8);
    }
    100%{
        transform: scaleY(1);
    }
}

@media screen and (max-width:1000px){
    {% comment %} main, .bar-bottom{
        grid-template-columns: 1fr;
    }
    .container{
        max-width: 700px;
    }
    .options{
        justify-self: start;
        width: 100%;
    }
    .controls{
        flex-direction: column;
    }
    .controls div {
        margin: 1em 0;
    } {% endcomment %}
}
</style>  
<script>
const thumb = document.querySelectorAll(".thumbs img")
const img = document.querySelector(".card-banner img")
const colorBtn = document.querySelectorAll(".color")

//Id variables
let id = 1;
let colorType = 1;
let shoe =1


 var product = {
      images: [
        {% for image in product.images %}
          {
            src: "{{ image | img_url: 'large'}}",
            alt: "{{ image.alt }}"
          }{% unless forloop.last %},{% endunless %}
        {% endfor %}
      ]
 };

  function getImage(id) {
     // Ensure that the product object is defined
     if (typeof product === 'undefined' || !product.images || !product.images[id]) {
        console.error("Product or image not defined");
        return null;
    }

    // Return the image object
    return product.images[id];
  }
  


  document.addEventListener("DOMContentLoaded", function() {
    const thumb = document.querySelectorAll(".thumbs img")
    const img = document.querySelector(".card-banner img")
    const stars = document.querySelectorAll(".rating-wrapper ion-icon");

    {% comment %} var thumb = document.querySelectorAll(".thumb"); // Assuming you have a class 'thumb' for thumbnails
    var img = document.getElementById("mainImage"); // Assuming the main image has an id 'mainImage' {% endcomment %}
    var imgContainer = document.getElementById("imgContainer"); // Container for the image if you have one
    const sizes = document.querySelectorAll(".sizes > li");
  
    function getImage(id) {
      // Check if the product object and its images array are defined
      if (typeof product === 'undefined' || !product.images || !product.images[id]) {
        console.error("Product or image not defined");
        return "";
      }
  
      // Return the image URL
      return product.images[id].src;
    }
  
    function resetActive(elements, className, index) {
      // Remove 'active' class from all elements
      elements.forEach((element, i) => {
        if (i === index) {
          element.classList.add(`${className}-active`);
        } else {
          element.classList.remove(`${className}-active`);
        }
      });
    }
  
    // Setup click event listeners
    for (let i = 0; i < thumb.length; i++) {
      thumb[i].addEventListener("click", (e) => {
        // Set the main image to the clicked thumbnail image
        img.src = getImage(i);
  
        // Add 'active' class to the clicked thumbnail
        resetActive(thumb, "thumb", i);
  
        // Add fade-in animation
        imgContainer.classList.add("fade-in");
        setTimeout(() => {
          imgContainer.classList.remove("fade-in");
        }, 500); // Match with your fade duration
      });
    }

    //Changing Shoe Size
  for(let i=0; i < sizes.length; i++){
     sizes[i].addEventListener('click',(e)=>{
      resetActive(sizes, 'size', i)
    });
  }

  function resetStars(shoe){
    for(let i=0; i< stars.length; i++){
       stars[i].innerText = 'star_outline'
    }
  
  //adding the ratings
  for (let i = 0; i < ratings[shoe]; i++){
    stars[i].innerText = "star"
   }
  }


  //Setting up the initial state of the data
  resetStars(shoe - 1);
  });








 /*-----------------------------------*\
  #ADD TO CART
\*-----------------------------------*/  
{% comment %} 
  function fetchCart() {
    fetch('/cart.js')
      .then(response => response.json())
      .then(cart => {
        updateCartUI(cart);
      })
      .catch(error => console.error('Error-fetching cart:', error));
  }


  const currencySymbol = "{{ shop.currency | escape }}"; 
  function updateCartUI(cart) {
    var cartContent = document.getElementById('cart-content');
    cartContent.innerHTML = ''; // Clear existing content
    
    if (cart.item_count > 0) {
      var cartHTML = `
      <div style="display: flex; flex-direction: column;">
        <h1>Cart</h1>
        <form action="/cart" method="post" novalidate>`;
      let subtotal = 0;
      cart.items.forEach(function(item, index) {
        const itemPrice = item.price / 100;  // Convert cents to dollars
        const initialTotalPrice = itemPrice * item.quantity;
        subtotal += initialTotalPrice;
        const safeItemId = `item_${item.key.replace(/[^a-zA-Z0-9_-]/g, '')}`;

        cartHTML += `
                    <div style="display:flex;"  id="${safeItemId}">
                        <div style="flex:1; display:flex; align-items:center; justify-content:center;">
                        <a href="${item.url}">
                            <img src="${item.image}" alt="${item.title}" class="img-cover" width="480" height="640" loading="lazy">
                          </a>
                        </div>
                        <div style="flex:1; display:flex; align-items:center; justify-content:center; flex-direction:column;" >
                          <td>
                            <a href="${item.url}">${item.product_title}</a>
                              ${item.price}
                            <a href="#" class="remove-item" data-line="${index + 1}" data-key="${item.key}" style="color: red;">Remove</a>
                            
                          </td>
                          <td id="price_${item.key}">
                            ${currencySymbol}${initialTotalPrice.toFixed(2)}
                          </td>
                          <div>
                              <p>Unit Price: ${currencySymbol}${itemPrice.toFixed(2)}</p>
                              <p id="line_price_${item.key}">Total: ${currencySymbol}${initialTotalPrice.toFixed(2)}</p>
                          </div>
                          <td>
                            <input type="number" name="updates[]" id="updates_${item.key}" value="${item.quantity}" min="0">
                          </td>
                          <td>
                            {% if item.original_line_price != item.line_price %}{{ item.original_line_price | money }}{% endif %}
                            {{ item.line_price | money }}
                            {% for discount in item.discounts %}{{ discount.title }}{% endfor %}
                        </td>
                        <div class="quantity-selector">
                          <button type="button" class="decrement" id="decrement_${item.key}">-</button>
                          <span id="quantity_${item.key}">${item.quantity}</span>
                          <button type="button" class="increment" id="increment_${item.key}">+</button>
                        </div> 
                        </div>
                </div>
        `;
      });
  
      cartHTML += `
        <div>
          <p id="subtotal">Subtotal: ${currencySymbol}${subtotal.toFixed(2)}</p>
          <button type="submit" name="update">Update</button>
          <button type="submit" name="checkout" class="btn btn-primary">Checkout</button>
          {% comment %} <p>Sub total: ${Shopify.formatMoney(cart.total_price)}</p> {% endcomment %}
        </div>
      </form>
    </div>`; 

    cartContent.innerHTML = cartHTML;

  // Add event listeners for increment and decrement buttons
  cart.items.forEach(function(item, index) {
    const decrementButton = document.getElementById(`decrement_${item.key}`);
    const incrementButton = document.getElementById(`increment_${item.key}`);
    const quantityDisplay = document.getElementById(`quantity_${item.key}`);
    const quantityInput = document.getElementById(`updates_${item.key}`);
    const linePriceDisplay = document.getElementById(`line_price_${item.key}`);
    const subtotalDisplay = document.getElementById('subtotal');
    const safeItemId = `item_${item.key.replace(/[^a-zA-Z0-9_-]/g, '')}`;



    function updatePriceAndQuantity(newQuantity) {
      const newLinePrice = (item.price * newQuantity) / 100;
      quantityDisplay.textContent = newQuantity;
      quantityInput.value = newQuantity;
      linePriceDisplay.textContent = `Total: ${currencySymbol}${newLinePrice.toFixed(2)}`;

      // Update the subtotal
      subtotal = subtotal - (item.price * item.quantity) / 100 + newLinePrice;
      subtotalDisplay.textContent = `Subtotal: ${currencySymbol}${subtotal.toFixed(2)}`;

      // Update item quantity to the new quantity
      item.quantity = newQuantity;
    }

    decrementButton.addEventListener('click', function() {
      let currentQuantity = parseInt(quantityInput.value, 10);
      if (currentQuantity > 1) {
        currentQuantity--;
        updatePriceAndQuantity(currentQuantity);
      }
    });

    incrementButton.addEventListener('click', function() {
      let currentQuantity = parseInt(quantityInput.value, 10);
      currentQuantity++;
      updatePriceAndQuantity(currentQuantity);
    });



//REMOVING
    const removeButton = document.querySelector(`.remove-item[data-key="${item.key}"]`);
    
    removeButton.addEventListener('click', function(e) {
      e.preventDefault();
      removeCartItem(safeItemId, index +1);
    });
  });
      {% comment %} cartContent.innerHTML = cartHTML; {% endcomment %}
    } else {
      cartContent.innerHTML = '<h2>Cart</h2><p>Cart is empty</p>';
    }


    function removeCartItem(safeItemId, line) {
      
        console.log(`Attempting to remove item with ID: ${safeItemId}`);
        const itemElement = document.getElementById(safeItemId);
        if (itemElement) {
          fetch(`/cart/change.js`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'X-Requested-With': 'XMLHttpRequest'
            },
            body: JSON.stringify({
              line: line,
              quantity: 0
            })
          })
          .then(response => response.json())
          .then(updatedCart => {
            itemElement.remove();
            updateSubtotal(updatedCart);
          })
          .catch(error => {
            console.error('Error removing item from cart:', error);
          });
        } else {
          console.error(`Element with ID ${safeItemId} not found.`);
        }
    
    }
  
  
    
    

    
    // Function to update the subtotal
    function updateSubtotal(updatedCart) {
      let subtotal = 0;
      updatedCart.items.forEach(item => {
        subtotal += (item.price * item.quantity) / 100;
      });
      document.getElementById('subtotal').textContent = `Subtotal: ${currencySymbol}${subtotal.toFixed(2)}`;
    }
  }
  

  






  function submitAddToCartForm(formElement) {
    let formData = new FormData(formElement);
    var myModal2 = document.getElementById('myModal2');
    var loader = myModal2.querySelector('#loader');
    var cartContent = myModal2.querySelector('#cart-content');
  
    // Show the modal
    myModal2.style.display = 'block';
  
    // Show the loader and hide the cart content initially
    loader.style.display = 'block';
    cartContent.style.display = 'none';
  
    // Simulate data fetching (or actual AJAX request)
  // Adjust this timeout based on actual data fetching time
  
    fetch(window.Shopify.routes.root + 'cart/add.js', {
      method: 'POST',
      body: formData
    })
    .then(response => response.json())
    .then(data => {     
      openCart(); 
      fetchCart();
      setTimeout(function() {
        // Hide the loader and show the cart content
        loader.style.display = 'none';
        cartContent.style.display = 'block';
      }, 100); 

    })
    .catch((error) => {
      console.error('Error:', error);
    });
  
    return false; // Prevent the default form submission
  } {% endcomment %}


</script>

{% schema %}
{
  "name": "main-product",
  "settings": [],
  "blocks": [],
  "presets": [
    {
      "name": "main-product"
    }
  ]
}
{% endschema %}

{% comment %} {% schema %}
{
"name":"Pr oduct-main",
"settings":[
  {
    "type": "color",
    "id": "background",
    "label": "Background",
    "default": "#F4F4F4"
  },
  {
    "type": "color",
    "id": "text_color",
    "label": "Text",
    "default": "#000000"
  }
],
"presets":[
    {
  "name": "product-main" 
    }
]
}
{% endschema %} {% endcomment %}
    {% comment %} <nav>
      <a href="index.html">
        <img src="./assets/images/MainLogo.png.svg"  style="width:80px;;" />
      </a>
      <span>Todays Top Picks</span>
      <a href="#">
          <span class="material-icons-outlined">
            shopping_bag
          </span>
      </a>
    </nav>
  <main>
      <div>
          <span>MENS-</span>
          <h1 class="title">
              <span class="titleText">
                  Red Nike Jordan Max Aura 3
              </span>
              <span class="titleOverlay"></span>
          </h1>
           <p class="description">
           Lorem ipsum dolor sit amet.
           </p>
           <div class="thumbs">
             <img src="./assets/images/shoe1-1/img1.jpg" alt="" class="thumb-active">
             <img src="./assets/images/shoe1-1/img2.jpg" alt="">
             <img src="./assets/images/shoe1-1/img3.jpg" alt="">
             <img src="./assets/images/shoe1-1/img4.jpg" alt="">
           </div>
      </div>
      <div class="showcase">
          <div>
              <img src="./assets/images/showcase/shoe1-1/img1.png" alt="">
              <div class="shadow"></div>
          </div>
      </div>
      <div class="options">
          <h4>Size</h4>
          <ul class="sizes">
              <li class="size-active">37</li>
              <li>38</li>
              <li>39</li>
              <li>40</li>
              <li>41</li>
          </ul>
          <div class="relative">
             <h4>Reviews</h4>
             <ul class="stars">
               <li>
                  <span class="material-icons-outlined">
                     star
                  </span>
               </li>
               <li>
                  <span class="material-icons-outlined">
                      star
                  </span>
               </li>
               <li>
                  <span class="material-icons-outlined">
                      star
                  </span>
               </li>
               <li>
                  <span class="material-icons-outlined">
                      star_outline
                  </span>
               </li>
             </ul>
          </div>
          <div class="pricing">
            <h4>Price</h4>
            <h4 class="price">$150</h4>
          </div>
          <div class="colors">
            <h4>Colors</h4>
            <ul>
              <li class="color color-active"></li>
              <li class="color"></li>
            </ul>
          </div>
      </div>
  </main>
  
 
  </div>

  {% schema %}
      {
        "name": "main-product",
        "settings": [],
        "blocks": [],
        "presets": [
          {
            "name": "main-product"
          }
        ]
      }
      {% endschema %}
 {% endcomment %}
